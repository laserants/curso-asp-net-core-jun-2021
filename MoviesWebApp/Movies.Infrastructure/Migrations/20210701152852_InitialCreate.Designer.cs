// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.Infrastructure.DataAccess;

namespace Movies.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210701152852_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Movies.Core.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            Name = "Tony Stark"
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 1,
                            Name = "Steve Rogers"
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 1,
                            Name = "Okoye"
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 2,
                            Name = "Simba"
                        },
                        new
                        {
                            Id = 5,
                            MovieId = 2,
                            Name = "Nala"
                        },
                        new
                        {
                            Id = 6,
                            MovieId = 3,
                            Name = "Ip Man"
                        },
                        new
                        {
                            Id = 7,
                            MovieId = 4,
                            Name = "Henry Brogan"
                        },
                        new
                        {
                            Id = 8,
                            MovieId = 5,
                            Name = "Violet Crawley"
                        },
                        new
                        {
                            Id = 9,
                            MovieId = 5,
                            Name = "Lady Mary Crawley"
                        });
                });

            modelBuilder.Entity("Movies.Core.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rating")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = 75,
                            Title = "Avenger: Endgame",
                            Year = 2019
                        },
                        new
                        {
                            Id = 2,
                            Rating = 70,
                            Title = "The Lion King",
                            Year = 2019
                        },
                        new
                        {
                            Id = 3,
                            Rating = 80,
                            Title = "Ip Man 4",
                            Year = 2019
                        },
                        new
                        {
                            Id = 4,
                            Rating = 40,
                            Title = "Gemini Man",
                            Year = 2019
                        },
                        new
                        {
                            Id = 5,
                            Rating = 65,
                            Title = "Downton Abbey",
                            Year = 2020
                        });
                });

            modelBuilder.Entity("Movies.Core.Entities.Character", b =>
                {
                    b.HasOne("Movies.Core.Entities.Movie", "Movie")
                        .WithMany("Characters")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Movies.Core.Entities.Movie", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
